{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddingPost/AddingPost.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","editMode","status","isFetching","activeEditMode","setState","deActiveEditMode","updateUserStatus","activeIsFetching","deActiveIsFetching","onStatusChange","e","textStatus","currentTarget","value","prevProps","prevState","className","s","content","preloader","Preloader","onClick","onChange","autoFocus","onBlur","ProfileInfo","deActiveMode","profileItems","avaBlock","mainAva","onMouseEnter","onMouseLeave","src","profile","photos","large","Ava","hoverBlock","alert","desc","fullName","PureComponent","AddingPostRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","validate","requiredField","component","placeholder","type","disabled","valid","AddingPost","memo","formData","addPost","textArea","reset","Post","newLike","createRef","item","avaItem","message","likesBox","like","ref","addLike","id","changes","data-count","likes","role","MyPosts","postsData","length","setPosts","postElement","map","p","key","postsBlock","addPostAC","MyPostsContainer","profilePage","newPostText","dispatch","addLikeActionCreator","posts","setPostsActionCreator","name_field","Profile","ProfileComponent","userId","match","params","authorrizedUserId","setUserProfileThunk","getUserStatusTh","history","push","prevProp","compose","withRouter"],"mappings":"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","file":"static/js/3.2b55c74e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1_dx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1bUQM\",\"profileItems\":\"ProfileInfo_profileItems__2pdAb\",\"avaBlock\":\"ProfileInfo_avaBlock__2FIVV\",\"mainAva\":\"ProfileInfo_mainAva__2yrc8\",\"hoverBlock\":\"ProfileInfo_hoverBlock__3IMMW\",\"desc\":\"ProfileInfo_desc__o0L99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileStatus_content__g7h_o\",\"preloader\":\"ProfileStatus_preloader__3GkMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__FLRY6\",\"item\":\"MyPosts_item__1wLmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UpLm\",\"avaItem\":\"Post_avaItem__fQ8og\",\"like\":\"Post_like__1YAhm\"};","import React, { PureComponent } from \"react\";\r\nimport s from './ProfileStatus.module.css';\r\nimport { Component } from \"react\";\r\nimport Preloader from \"../../common/preloaders/Preloader\";\r\n\r\nclass ProfileStatus extends Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,  // всегда инициализируется \"\"\r\n        isFetching: false  \r\n    };\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n            //status: this.props.status   // ?\r\n        });\r\n    }\r\n\r\n    deActiveEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n            isFetching: true\r\n        });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    activeIsFetching = () => {\r\n        this.setState({\r\n            isFetching: true\r\n        });\r\n    }\r\n\r\n    deActiveIsFetching = () => {\r\n        this.setState({\r\n            isFetching: false\r\n        });\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        let textStatus = e.currentTarget.value;\r\n        this.setState({\r\n            status: textStatus\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({status: this.props.status, isFetching: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.content}>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        {this.state.isFetching ? <div className={s.preloader}><Preloader /></div> : <span onClick={ this.activeEditMode }>{this.props.status || \"---\"}</span> } \r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deActiveEditMode } value={this.state.status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { PureComponent } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Ava from '../../../assets/images/userAva.png';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst uploadIcon = 'https://img.icons8.com/pastel-glyph/2x/upload--v2.png';\r\n\r\nclass ProfileInfo extends PureComponent {       // оптимизация. Убираем лишние ререндеры из-за setState одного и того же свойства при onMouseEnter и onMouseLeave\r\n    state = {\r\n        editMode: false\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({ editMode: true });\r\n    }\r\n\r\n    deActiveMode = () => {\r\n        this.setState({ editMode: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.content}>\r\n\r\n                <div className={s.profileItems}>\r\n\r\n                    <div className={s.avaBlock}>\r\n                        <div className={s.mainAva} onMouseEnter={this.activeEditMode} onMouseLeave={this.deActiveMode}>\r\n                            <img src={this.props.profile == null ? Ava : this.props.profile.photos.large === null ? Ava : this.props.profile.photos.large} />\r\n                        </div>\r\n\r\n                        {this.state.editMode &&\r\n                            <div onMouseEnter={this.activeEditMode} onMouseLeave={this.deActiveMode}  className={s.hoverBlock} onClick={() => { alert(\"UPLOAD PICTURE\"); }}>\r\n                                <img src={uploadIcon} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className={s.desc}>\r\n                        <section>\r\n                            <h4>{this.props.profile === null ? \"\" : this.props.profile.fullName}</h4>\r\n                            <ProfileStatus status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n                            {/* Status: {props.profile === null ? \"\" : props.profile.aboutMe} */}\r\n                        </section>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n// const ProfileInfo = (props) => {\r\n//     // console.log(props);\r\n\r\n//     return (\r\n//         <div className={s.content}>\r\n\r\n//             <div className={s.profileItems}>\r\n\r\n//                 <div className={s.avaItem}>\r\n//                     <div className={s.avaBlock}>\r\n//                         <img src={props.profile == null ? Ava : props.profile.photos.large === null ? Ava : props.profile.photos.large} />\r\n//                         {/* <img src='https://sun9-73.userapi.com/impf/lGN1h2b6QLEqmOsC36eBf4zp_zkbrO1wH485nA/zdQR3cXJskk.jpg?size=1565x1037&quality=96&proxy=1&sign=34d74be3285ca581e92b1b470e49c7d4' alt=\"ava\" /> */}\r\n//                     </div>\r\n\r\n//                     <div className={s.wallper}>\r\n//                         <img src={props.profile == null ? \"\" : props.profile.photos.large === null ? \"\" : background} alt=\"\" />\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className={s.desc}>\r\n//                     <section>\r\n//                         <h4>{props.profile === null ? \"\" : props.profile.fullName}</h4>\r\n//                         <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\r\n//                         {/* Status: {props.profile === null ? \"\" : props.profile.aboutMe} */}\r\n//                     </section>\r\n//                 </div>\r\n\r\n//             </div>\r\n\r\n\r\n\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./AddingPost.module.css\";\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { requiredField } from \"../../../../validators/validators\";\r\n\r\n\r\nconst AddingPostForm = (props) => {\r\n    //console.log(props);\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            \r\n            <div>\r\n                <Field name={\"textArea\"} validate={[requiredField]} component={\"textarea\"} placeholder={\"Start to write...\"} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" disabled={props.valid ? \"\" : \"disabled\"}>Add Post</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddingPostRedux = reduxForm({form: 'post'}) (AddingPostForm);\r\n\r\nconst AddingPost = React.memo((props) => {\r\n    const onSubmit = (formData) => {\r\n        props.addPost(formData.textArea);\r\n        props.reset('post');\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <h3>My Posts:</h3>\r\n            <AddingPostRedux onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AddingPost;","import React from 'react';\r\n//import { addLikeActionCreator } from '../../../../redux/Profile-reducer';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = React.memo((props) => {\r\n  let newLike = React.createRef();\r\n\r\n  let onAddLike = () => {\r\n    props.addLike(props.id, props.changes);\r\n    //props.dispatch(addLikeActionCreator(props.id, props.changes));\r\n  };\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.avaItem}>\r\n        <img src='https://www.birminghamzoo.com/wp-content/uploads/2013/11/Red-Panda-Parker-001-Birmingham-Zoo-2-27-18-1024x801.jpg' />\r\n      </div>\r\n\r\n      <div>\r\n        {props.message}\r\n      </div>\r\n\r\n      <div className={s.likesBox}>\r\n        {/* <em><span>likes: {props.likes}</span></em>    onMouseOver={addLike}*/}\r\n        <em><a className={s.like} ref={newLike} onClick={onAddLike} data-count={props.likes} role=\"button\" >Like: {props.likes}</a></em>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Post;","import React from 'react';\r\nimport AddingPost from './AddingPost/AddingPost';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let insObj = [\r\n    { id: 4, message: \"Hi, man\", likes: 5, changes: 0 },\r\n    { id: 3, message: \"Yooooo\", likes: 10, changes: 0 },\r\n    { id: 2, message: \"what's up\", likes: 25, changes: 0 },\r\n    { id: 1, message: \"fuf\", likes: 1, changes: 0 }\r\n  ];\r\n\r\n  if (props.postsData.length === 0) {\r\n    props.setPosts(insObj);\r\n  }\r\n\r\n  let postElement =\r\n    props.postsData.map((p) => (<Post key={p.id} id={p.id} message={p.message} likes={p.likes} changes={p.changes} addLike={props.addLike} />));\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n\r\n      <AddingPost addPost={props.addPostAC} reset={props.reset}/>\r\n\r\n      <div className={s.item}>\r\n        {postElement}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","//import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reset } from 'redux-form';\r\nimport { addPostAC, addLikeActionCreator, setPostsActionCreator } from '../../../redux/Profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPostAC: (formData) => {\r\n      dispatch(addPostAC(formData));\r\n    },\r\n    addLike: (id, changes) => {\r\n      dispatch(addLikeActionCreator(id, changes));\r\n    },\r\n    setPosts: (posts) => {\r\n      dispatch(setPostsActionCreator(posts));\r\n    },\r\n    reset: (name_field) => {\r\n      dispatch(reset(name_field));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer; ","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {setUserProfileThunk, getUserStatusTh, updateUserStatus } from '../../redux/Profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorrizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nclass ProfileComponent extends React.Component {\r\n\r\n    // state = {\r\n    //     myProf: false\r\n    // };\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorrizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");  // грубый переход на страницу login если user ещё не авторизован, а также нет в url-номер выбранного user'a\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.props.setUserProfileThunk(userId);\r\n        this.props.getUserStatusTh(userId);\r\n        \r\n        //this.setState({myProf: true});\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if(!this.props.authorrizedUserId) {         // Проблема перехода на страницу пользователя, если нет авторизации   ????\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        // if(!this.props.match.params.userId && !this.state.myProf) {\r\n        //     this.props.setUserProfileThunk(this.props.authorrizedUserId);\r\n        //     this.props.getUserStatusTh(this.props.authorrizedUserId);\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfileThunk, getUserStatusTh, updateUserStatus }),\r\n    withRouter)\r\n(ProfileComponent);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileComponent);  // hoc-компонента для ProfileComponent, где реализуется Redirect\r\n// let withRouterContainer = withRouter(AuthRedirectComponent);     // контейнерная компонента для AuthRedirectComponent. Компонента, которая отдаётся connect'у. \r\n\r\n// const ProfileContainer = connect(mapStateToProps, {setUserProfileThunk })(withRouterContainer);\r\n"],"sourceRoot":""}