{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Chat/ChatForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","memo","className","s","dialog","dialogAva","src","onClick","alert","id","activeClassName","active","name","MessageItem","message","text","ChatReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","ChatForm","chatElem","formData","sendMessageAC","chatTextArea","reset","Dialogs","dialogsElement","dialogsData","map","d","key","messagesElement","messagesData","m","content","dialogs","dialogsItems","messages","chat","compose","dialogsPage","dispatch","messageBody","name_form"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,sBAAsB,SAAW,4B,sICGjTC,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFG,kBAAC,IAAD,CAAUC,GAAI,eAHT,GACXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAoCL,K,+HCChCM,EAhBIF,IAAMG,MAAK,SAACL,GAM3B,OACI,yBAAKM,UAAWC,IAAEC,QACd,yBAAKF,UAAWC,IAAEE,WACd,yBAAKC,IAAI,6DAEb,kBAAC,IAAD,CAASC,QATA,WACbC,MAAM,8BAQ4BX,GAAI,YAAcD,EAAMa,GAAIC,gBAAiBP,IAAEQ,QAASf,EAAMgB,UCNzFC,EANKf,IAAMG,MAAK,SAACL,GAC5B,OACI,yBAAKM,UAAWC,IAAEW,SAAUlB,EAAMmB,S,kBCapCC,EAAgBC,YAAU,CAACC,KAAM,YAAjBD,EAbT,SAACrB,GACV,OACI,0BAAMuB,SAAUvB,EAAMwB,cAElB,6BACI,kBAACC,EAAA,EAAD,CAAOT,KAAM,eAAgBU,YAAY,mBAAmBC,UAAW,aACvE,6CAuBDC,EAdE,SAAC5B,GAOd,OACI,yBAAKM,UAAWC,IAAEsB,UACd,kBAACT,EAAD,CAAeG,SAPN,SAACO,GACd9B,EAAM+B,cAAcD,EAASE,cAC7BhC,EAAMiC,MAAM,iBCkBLC,EAnCC,SAAClC,GAEb,IAAImC,EAAiBnC,EAAMoC,YAAYC,KAAI,SAACC,GAAD,OAAQ,kBAAC,EAAD,CAAYC,IAAKD,EAAEzB,GAAIG,KAAMsB,EAAEtB,KAAMH,GAAIyB,EAAEzB,QAC1F2B,EAAkBxC,EAAMyC,aAAaJ,KAAI,SAACK,GAAD,OAAQ,kBAAC,EAAD,CAAaH,IAAKG,EAAE7B,GAAIM,KAAMuB,EAAEvB,UAErF,OACI,yBAAKb,UAAWC,IAAEoC,SAEd,yBAAKrC,UAAWC,IAAEqC,SAEd,yBAAKtC,UAAWC,IAAEsC,cAEbV,GAIL,yBAAK7B,UAAWC,IAAEuC,UAEbN,GAIL,yBAAKlC,UAAWC,IAAEwC,MAIR,kBAAC,EAAD,CAAUd,MAAOjC,EAAMiC,MAAOF,cAAe/B,EAAM+B,oBCJ9DiB,sBACX7C,aAtBoB,SAACV,GACrB,MAAO,CACH2C,YAAa3C,EAAMwD,YAAYb,YAC/BK,aAAchD,EAAMwD,YAAYR,iBAIb,SAACS,GACxB,MAAO,CACHnB,cAAe,SAACoB,GACZD,EAASnB,YAAcoB,KAE3BlB,MAAO,SAACmB,GACJF,EAASjB,YAAMmB,SAUvBxD,IAFWoD,CAGdd","file":"static/js/4.55f94141.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3xuUo\",\"dialogs\":\"Dialogs_dialogs__3yqxD\",\"dialog\":\"Dialogs_dialog__p-YBm\",\"active\":\"Dialogs_active__3xdYi\",\"dialogsItems\":\"Dialogs_dialogsItems__23BQ_\",\"messages\":\"Dialogs_messages__2xYyC\",\"message\":\"Dialogs_message__25Kvc\",\"chat\":\"Dialogs_chat__33RAE\",\"chatElem\":\"Dialogs_chatElem__2BEzQ\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = React.memo((props) => {\r\n \r\n    let chooseChat = () => {\r\n        alert('chooseChat, func: onClick');\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div className={s.dialogAva}>\r\n                <img src='https://avatarfiles.alphacoders.com/968/thumb-96848.png'></img>\r\n            </div>\r\n            <NavLink onClick={chooseChat} to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = React.memo((props) => {\r\n    return (\r\n        <div className={s.message}>{props.text}</div>\r\n    );\r\n});\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\nconst Chat = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        \r\n            <div>\r\n                <Field name={\"chatTextArea\"} placeholder='Enter ur message' component={\"textarea\"}/>\r\n                <button>SEND</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ChatReduxForm = reduxForm({form: 'chatForm'}) (Chat);  // hoc\r\n\r\nconst ChatForm = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessageAC(formData.chatTextArea);\r\n        props.reset('chatForm');\r\n    }\r\n    \r\n    return (\r\n        <div className={s.chatElem}>\r\n            <ChatReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatForm;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport ChatForm from './Chat/ChatForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElement = props.dialogsData.map((d) => (<DialogItem key={d.id} name={d.name} id={d.id} />));   // преобразование входящих данных из объекта\r\n    let messagesElement = props.messagesData.map((m) => (<MessageItem key={m.id} text={m.text} />));\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogsItems}>\r\n\r\n                    {dialogsElement}\r\n\r\n                </div>\r\n\r\n                <div className={s.messages}>\r\n\r\n                    {messagesElement}\r\n\r\n                </div>\r\n\r\n                <div className={s.chat}>\r\n                    {/* <Chat newMessageBody={props.newMessageBody} \r\n                          chatSendMessage={props.chatSendMessage} \r\n                          chatNewMessageBodyChange={props.chatNewMessageBodyChange}/> */}\r\n                          <ChatForm reset={props.reset} sendMessageAC={props.sendMessageAC}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { reset } from 'redux-form';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageAC } from '../../redux/Dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageAC: (messageBody) => {\r\n            dispatch(sendMessageAC(messageBody));\r\n        },\r\n        reset: (name_form) => {\r\n            dispatch(reset(name_form));\r\n        }\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);  // hoc\r\n// const DialogsContainer = connect(mapStatetoProps, mapDispatchToProps) (AuthRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs);"],"sourceRoot":""}